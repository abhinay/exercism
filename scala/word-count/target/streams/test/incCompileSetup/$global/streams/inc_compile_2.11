format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
10 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$1.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$2.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$3.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$4.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$5.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$6.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$7.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$8.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$9.class
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs.class
binary dependencies:
3 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/lib/rt.jar
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> /Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> Phrase
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
10 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$1
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$2
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$3
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$4
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$5
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$6
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$7
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$8
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs$$anonfun$9
used names:
20 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> ->
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> <init>
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> FlatSpec
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> Map
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> Matchers
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> Phrase
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> Predef
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> WordCountSpecs
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> apply
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> be
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> convertToAnyShouldWrapper
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> counts
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> in
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> it
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> org
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> phrase
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> scala
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> scalatest
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> should
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> wordCount
product stamps:
10 items
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$1.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$2.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$3.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$4.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$5.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$6.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$7.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$8.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs$$anonfun$9.class -> lastModified(1445616175000)
/Users/mehtaa/exercism/scala/word-count/target/scala-2.11/test-classes/WordCountSpecs.class -> lastModified(1445616175000)
source stamps:
1 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> hash(596dd6cad1e6029cc384865f599946b849c13dce)
binary stamps:
3 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1433812782000)
/Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
3 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Int
/Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> 

external apis:
1 items
Phrase -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC+3/vKAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cGuvHgp0AAZub3RpZnlzcQB+AAzWzbDFdAAEd2FpdHNxAH4ADOMvZGJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMFb5M5nQABmVxdWFsc3NxAH4ADAmuT3Z0AAxhc0luc3RhbmNlT2ZzcQB+AAwGYYgndAAMc3luY2hyb25pemVkc3EAfgAMns38BHQADSRpc0luc3RhbmNlT2ZzcQB+AAws3nAbdAAJd29yZENvdW50c3EAfgAMBoq7Z3QABlBocmFzZXNxAH4ADHzpukB0AAlub3RpZnlBbGxzcQB+AAxM78ZFdAAMaXNJbnN0YW5jZU9mc3EAfgAM+9BE03QABjxpbml0PnNxAH4ADJiXdah0AAI9PXNxAH4ADLhktGh0AAVjbG9uZXNxAH4ADEPyFgt0AAh0b1N0cmluZ3NxAH4ADNd+34x0AAIhPXNxAH4ADBAoAXB0AAhnZXRDbGFzc3NxAH4ADNuubkJ0AAJuZXNxAH4ADOHH5B90AAJlcXNxAH4ADBYqV4h0AAIjI3NxAH4ADB7MSL50AAhmaW5hbGl6ZXNxAH4ADLd6qS50AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cABxAH4AH3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AW3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWgFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBjc3EAfgBaAXVxAH4APgAAAABwc3EAfgBaAXVxAH4APgAAAABwc3EAfgBaAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ae3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AfHNxAH4Ab3QAA0FueXNxAH4Ac3NxAH4AdnVxAH4AeQAAAAJzcQB+AHt0AAVzY2FsYXEAfgCCcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABUJVwOHh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABBL1VzZXJzL21laHRhYS9leGVyY2lzbS9zY2FsYS93b3JkLWNvdW50L3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRTgW6XmlSyfasio3QIEF9s4rCIlQ==
source infos:
1 items
/Users/mehtaa/exercism/scala/word-count/src/test/scala/word_count_test.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABUJVwQ551cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9tZWh0YWEvZXhlcmNpc20vc2NhbGEvd29yZC1jb3VudC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
