format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
10 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$1.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$2.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$3.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$4.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$5.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$6.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$7.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$8.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$9.class
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest.class
binary dependencies:
2 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> /Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> Squares
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> Squares$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
10 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$1
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$2
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$3
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$4
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$5
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$6
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$7
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$8
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest$$anonfun$9
used names:
18 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> <init>
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> Equality
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> FlatSpec
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> Matchers
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> SquaresTest
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> convertToAnyShouldWrapper
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> default
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> difference
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> equal
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> in
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> it
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> org
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> result
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> scalactic
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> scalatest
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> should
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> squareOfSums
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> sumOfSquares
product stamps:
10 items
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$1.class -> lastModified(1447864558000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$2.class -> lastModified(1447864558000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$3.class -> lastModified(1447864558000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$4.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$5.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$6.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$7.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$8.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest$$anonfun$9.class -> lastModified(1447864559000)
/Users/mehtaa/exercism/scala/difference-of-squares/target/scala-2.11/test-classes/SquaresTest.class -> lastModified(1447864558000)
source stamps:
1 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> hash(bf7613a862a7d3476708d2ae9c82684ab126a3c1)
binary stamps:
2 items
/Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
2 items
/Users/mehtaa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Int
/Users/mehtaa/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> 

external apis:
2 items
Squares -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAkhZoOAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAH3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cEwIBvN0AAZub3RpZnlzcQB+AAzH52g1dAAHU3F1YXJlc3NxAH4ADLJCJVp0AAR3YWl0c3EAfgAMYVkkd3QADSRhc0luc3RhbmNlT2ZzcQB+AAytWaCbdAAMcHJvZHVjdEFyaXR5c3EAfgAMbNxjaHQADHN1bU9mU3F1YXJlc3NxAH4ADBGVYoR0AAZlcXVhbHNzcQB+AAw7jF76dAAMYXNJbnN0YW5jZU9mc3EAfgAM5CzAl3QADHN5bmNocm9uaXplZHNxAH4ADPDp6Rd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMKO6uu3QADHNxdWFyZU9mU3Vtc3NxAH4ADJPEYCZ0AAhjYW5FcXVhbHNxAH4ADAnfJ6R0AA1wcm9kdWN0UHJlZml4c3EAfgAM2lhgAHQACW5vdGlmeUFsbHNxAH4ADFpPikd0AAZzcXVhcmVzcQB+AAwBnaAmdAAMaXNJbnN0YW5jZU9mc3EAfgAMIh+yHXQABjxpbml0PnNxAH4ADKA2a0F0AAI9PXNxAH4ADN8a4/N0AAVjbG9uZXNxAH4ADFYvhVV0AARjb3B5c3EAfgAMpEmArHQACHRvU3RyaW5nc3EAfgAMHT2dOnQAAiE9c3EAfgAMys6aUnQACGdldENsYXNzc3EAfgAMcaL1inQAAm5lc3EAfgAMOcLk6nQACmRpZmZlcmVuY2VzcQB+AAyHrvUUdAACZXFzcQB+AAxYOop0dAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMoF01NHQAAiMjc3EAfgAMouKKY3QACGZpbmFsaXplc3EAfgAM6NM+cHQADnByb2R1Y3RFbGVtZW50c3EAfgAMSdu2HXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AVXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHEAfgARdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBteHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBsAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBVTAAJaW5oZXJpdGVkcQB+AFVMAAdwYXJlbnRzcQB+AFV4cQB+AHVzcQB+AGwBdXEAfgBQAAAAAHBzcQB+AGwBdXEAfgBQAAAAAHBzcQB+AGwBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAZzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB0dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB0c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCOc3EAfgCBcQB+AIRzcQB+AIVzcQB+AIh1cQB+AIsAAAADc3EAfgCNdAAEamF2YXNxAH4AjXQAAmlvcQB+AJJzcQB+AIF0AAdQcm9kdWN0cQB+AIdzcQB+AIF0AAZFcXVhbHNxAH4Ah3NxAH4AgXQABk9iamVjdHNxAH4AhXNxAH4AiHVxAH4AiwAAAANzcQB+AI1xAH4AmHNxAH4AjXQABGxhbmdxAH4AknNxAH4AgXQAA0FueXEAfgCHcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABURtz0yx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABML1VzZXJzL21laHRhYS9leGVyY2lzbS9zY2FsYS9kaWZmZXJlbmNlLW9mLXNxdWFyZXMvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFFHsLeFpRLotLHduuSicEp3uXwtw
Squares$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAkhZoOAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAH3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cEwIBvN0AAZub3RpZnlzcQB+AAzH52g1dAAHU3F1YXJlc3NxAH4ADLJCJVp0AAR3YWl0c3EAfgAMYVkkd3QADSRhc0luc3RhbmNlT2ZzcQB+AAytWaCbdAAMcHJvZHVjdEFyaXR5c3EAfgAMbNxjaHQADHN1bU9mU3F1YXJlc3NxAH4ADBGVYoR0AAZlcXVhbHNzcQB+AAw7jF76dAAMYXNJbnN0YW5jZU9mc3EAfgAM5CzAl3QADHN5bmNocm9uaXplZHNxAH4ADPDp6Rd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMKO6uu3QADHNxdWFyZU9mU3Vtc3NxAH4ADJPEYCZ0AAhjYW5FcXVhbHNxAH4ADAnfJ6R0AA1wcm9kdWN0UHJlZml4c3EAfgAM2lhgAHQACW5vdGlmeUFsbHNxAH4ADFpPikd0AAZzcXVhcmVzcQB+AAwBnaAmdAAMaXNJbnN0YW5jZU9mc3EAfgAMIh+yHXQABjxpbml0PnNxAH4ADKA2a0F0AAI9PXNxAH4ADN8a4/N0AAVjbG9uZXNxAH4ADFYvhVV0AARjb3B5c3EAfgAMpEmArHQACHRvU3RyaW5nc3EAfgAMHT2dOnQAAiE9c3EAfgAMys6aUnQACGdldENsYXNzc3EAfgAMcaL1inQAAm5lc3EAfgAMOcLk6nQACmRpZmZlcmVuY2VzcQB+AAyHrvUUdAACZXFzcQB+AAxYOop0dAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMoF01NHQAAiMjc3EAfgAMouKKY3QACGZpbmFsaXplc3EAfgAM6NM+cHQADnByb2R1Y3RFbGVtZW50c3EAfgAMSdu2HXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AVXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHEAfgARdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBteHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBsAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBVTAAJaW5oZXJpdGVkcQB+AFVMAAdwYXJlbnRzcQB+AFV4cQB+AHVzcQB+AGwBdXEAfgBQAAAAAHBzcQB+AGwBdXEAfgBQAAAAAHBzcQB+AGwBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAZzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB0dAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB0c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCOc3EAfgCBcQB+AIRzcQB+AIVzcQB+AIh1cQB+AIsAAAADc3EAfgCNdAAEamF2YXNxAH4AjXQAAmlvcQB+AJJzcQB+AIF0AAdQcm9kdWN0cQB+AIdzcQB+AIF0AAZFcXVhbHNxAH4Ah3NxAH4AgXQABk9iamVjdHNxAH4AhXNxAH4AiHVxAH4AiwAAAANzcQB+AI1xAH4AmHNxAH4AjXQABGxhbmdxAH4AknNxAH4AgXQAA0FueXEAfgCHcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABURtz0yx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABML1VzZXJzL21laHRhYS9leGVyY2lzbS9zY2FsYS9kaWZmZXJlbmNlLW9mLXNxdWFyZXMvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFFHsLeFpRLotLHduuSicEp3uXwtw
source infos:
1 items
/Users/mehtaa/exercism/scala/difference-of-squares/src/test/scala/squares_test.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABURtu25R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAUS9Vc2Vycy9tZWh0YWEvZXhlcmNpc20vc2NhbGEvZGlmZmVyZW5jZS1vZi1zcXVhcmVzL3RhcmdldC9zY2FsYS0yLjExL3Rlc3QtY2xhc3Nlc3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABURtz4Ad1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAUS9Vc2Vycy9tZWh0YWEvZXhlcmNpc20vc2NhbGEvZGlmZmVyZW5jZS1vZi1zcXVhcmVzL3RhcmdldC9zY2FsYS0yLjExL3Rlc3QtY2xhc3Nlc3QAAS8=
